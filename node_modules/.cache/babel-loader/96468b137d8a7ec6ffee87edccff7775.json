{"remainingRequest":"D:\\智林\\test-paper\\test-paper\\node_modules\\babel-loader\\lib\\index.js!D:\\智林\\test-paper\\test-paper\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\智林\\test-paper\\test-paper\\src\\mock\\questionBank\\index.js","dependencies":[{"path":"D:\\智林\\test-paper\\test-paper\\src\\mock\\questionBank\\index.js","mtime":1577118538758},{"path":"D:\\智林\\test-paper\\test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\智林\\test-paper\\test-paper\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\智林\\test-paper\\test-paper\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwoKLy8g5byV5YWlbW9ja2pzCnZhciBNb2NrID0gcmVxdWlyZSgnbW9ja2pzJyk7IC8vIOiOt+WPliBtb2NrLlJhbmRvbSDlr7nosaEKLy8gbW9ja+S4gOe7hOaVsOaNrgoKCmV4cG9ydCB2YXIgdmVyc2lvbkxpc3QgPSBmdW5jdGlvbiB2ZXJzaW9uTGlzdChvcHQpIHsKICB2YXIgcCA9IGdldFBhcmFtcyhvcHQudXJsKTsKICB3aW5kb3cuY29uc29sZS5sb2cocCk7CiAgdmFyIGQgPSBNb2NrLm1vY2soewogICAgc3RhdHVzOiAnJywKICAgIG1zZzogJycsCiAgICAiZXh0cmF8Mi00IjogW3sKICAgICAgIm5hbWUiOiAn54mI5pys77yaJyArICdAY3NlbnRlbmNlKDMpJywKICAgICAgImVudGl0eUlkfCsxIjogMSwKICAgICAgImlkfCsxIjogMSwKICAgICAgImEiOiBwLnF1ZXN0aW9uVHlwZQogICAgfV0KICB9KTsKICByZXR1cm4gZDsKfTsKZXhwb3J0IHZhciBpdGVtTGlzdCA9IGZ1bmN0aW9uIGl0ZW1MaXN0KG9wdCkgewogIHZhciBwID0gZ2V0UGFyYW1zKG9wdC51cmwpOwogIHZhciBwYXJlbnRJZCA9IHAucGFyZW50SWQgPyBwLnBhcmVudElkIDogJy4nOwogIHZhciBkID0gTW9jay5tb2NrKHsKICAgIHN0YXR1czogJycsCiAgICBtc2c6ICcnLAogICAgImV4dHJhfDEzLTE4IjogW3sKICAgICAgIml0ZW1OYW1lIjogcC52ZXJzaW9uSWQgKyAnLicgKyBwYXJlbnRJZCArICdAY3NlbnRlbmNlKDEsMyknLAogICAgICAiaXRlbVR5cGUiOiAxLAogICAgICAiZW50aXR5SWR8KzEiOiAxLAogICAgICAiaWQiOiBwLnZlcnNpb25JZCArIHAucGFyZW50SWQgKyAnQGluY3JlbWVudCcKICAgIH1dCiAgfSk7CiAgcmV0dXJuIGQ7Cn07CmV4cG9ydCB2YXIgaXRlbURldGFpbExpc3QgPSBmdW5jdGlvbiBpdGVtRGV0YWlsTGlzdChvcHQpIHsKICB2YXIgcCA9IGdldFBhcmFtcyhvcHQudXJsKTsKICB2YXIgZCA9IE1vY2subW9jayh7CiAgICBzdGF0dXM6ICcnLAogICAgbXNnOiAnJywKICAgICJleHRyYXwxMy0xOCI6IFt7CiAgICAgICJuYW1lIjogcC5pdGVtSWQgKyAnQGNzZW50ZW5jZSgzLCA1KScsCiAgICAgICJjb2RlIjogImZvbnRzaXplIiwKICAgICAgInNob3dXYXl8KzEiOiBbMSwgMiwgMywgNF0sCiAgICAgICJlbnRpdHlJZHwrMSI6IDEsCiAgICAgICJpZCI6IHAuaXRlbUlkICsgJ0BpbmNyZW1lbnQnCiAgICB9XQogIH0pOwogIHJldHVybiBkOwp9OwpleHBvcnQgdmFyIGl0ZW1EZXRhaWxWYWx1ZUxpc3QgPSBmdW5jdGlvbiBpdGVtRGV0YWlsVmFsdWVMaXN0KG9wdCkgewogIHZhciBwID0gZ2V0UGFyYW1zKG9wdC51cmwpOwogIHZhciBkID0gTW9jay5tb2NrKHsKICAgIHN0YXR1czogJycsCiAgICBtc2c6ICcnLAogICAgImV4dHJhfDMtOCI6IFt7CiAgICAgICJuYW1lIjogcC5kZXRhaWxJZCArICdAY3dvcmQoIumbtuS4gOS6jOS4ieWbm+S6lOWFreS4g+WFq+S5neWNgSIpJywKICAgICAgInZhbHVlfCsyIjogMSwKICAgICAgImVudGl0eUlkfCsxIjogMSwKICAgICAgImlkIjogcC5kZXRhaWxJZCArICdAaW5jcmVtZW50JwogICAgfV0KICB9KTsKICByZXR1cm4gZDsKfTsKCmZ1bmN0aW9uIGdldFBhcmFtcyh1cmwpIHsKICB2YXIgcCA9IHt9OwoKICBpZiAodXJsLnNwbGl0KCc/JylbMV0pIHsKICAgIHVybC5zcGxpdCgnPycpWzFdLnNwbGl0KCcmJykuZm9yRWFjaChmdW5jdGlvbiAodikgewogICAgICB2YXIgYyA9IHYuc3BsaXQoJz0nKTsKICAgICAgcFtjWzBdXSA9IGNbMV07CiAgICB9KTsKICB9CgogIHJldHVybiBwOwp9"},{"version":3,"sources":["D:/智林/test-paper/test-paper/src/mock/questionBank/index.js"],"names":["Mock","require","versionList","opt","p","getParams","url","window","console","log","d","mock","status","msg","questionType","itemList","parentId","versionId","itemDetailList","itemId","itemDetailValueList","detailId","split","forEach","v","c"],"mappings":"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","sourcesContent":["// 引入mockjs\nconst Mock = require('mockjs');\n// 获取 mock.Random 对象\n// mock一组数据\nexport const versionList = function(opt){\n    let p = getParams(opt.url);\n    window.console.log(p);\n    let d = Mock.mock({\n        status:'',\n        msg:'',\n        \"extra|2-4\":[{\n            \"name\":'版本：'+'@csentence(3)',\n            \"entityId|+1\": 1,\n            \"id|+1\": 1,\n            \"a\":p.questionType\n        }]\n    });\n    return d\n}\nexport const  itemList= function(opt){\n    let p = getParams(opt.url);\n    let parentId = p.parentId?p.parentId:'.'\n    let d = Mock.mock({\n        status:'',\n        msg:'',\n        \"extra|13-18\":[{\n            \"itemName\":p.versionId+'.'+ parentId+'@csentence(1,3)',\n            \"itemType\":1,\n            \"entityId|+1\": 1,\n            \"id\": p.versionId+p.parentId+'@increment'\n        }]\n    });\n    return d\n}\nexport const  itemDetailList= function(opt){\n    let p = getParams(opt.url);\n    let d = Mock.mock({\n        status:'',\n        msg:'',\n        \"extra|13-18\":[{\n            \"name\":p.itemId+'@csentence(3, 5)',\n            \"code\": \"fontsize\",\n            \"showWay|+1\":[1,2,3,4],\n            \"entityId|+1\": 1,\n            \"id\": p.itemId+'@increment'\n        }]\n    });\n    return d\n}\nexport const  itemDetailValueList= function(opt){\n    let p = getParams(opt.url);\n    let d = Mock.mock({\n        status:'',\n        msg:'',\n        \"extra|3-8\":[{\n            \"name\":p.detailId + '@cword(\"零一二三四五六七八九十\")',\n            \"value|+2\":1,\n            \"entityId|+1\": 1,\n            \"id\": p.detailId +'@increment'\n        }]\n    });\n    return d\n}\n\nfunction getParams(url){\n    let p ={};\n    if(url.split('?')[1]){\n\n        url.split('?')[1].split('&').forEach((v)=>{let c = v.split('='); p[c[0]]=c[1]});\n    }\n    return p;\n}"]}]}